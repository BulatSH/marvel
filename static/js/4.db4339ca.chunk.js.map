{"version":3,"sources":["components/errorBoundary/ErrorBoundary.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/charSearchForm/CharSearchForm.js","resources/img/vision.png","components/pages/MainPage.js"],"names":["ErrorBoundary","state","error","errorInfo","console","log","this","setState","props","children","Component","View","data","name","description","thumbnail","homepage","wiki","imgStyle","objectFit","includes","className","src","alt","style","href","RandomChar","useState","char","setChar","useMarvelService","getCharacter","clearError","process","setProcess","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","id","Math","floor","random","then","setContent","onClick","mjolnir","CharList","charList","setCharList","newItemLoading","setNewItemLoading","offset","setOffset","charEnded","setCharEnded","getAllCharacters","loading","onRequest","initial","onCharListLoaded","newCharList","ended","length","itemRefs","useRef","focusOnItem","current","forEach","item","classList","remove","add","focus","elements","useMemo","Spinner","ErrorMessage","Error","arr","items","map","i","tabIndex","ref","el","onCharSelected","onKeyPress","e","key","renderItems","disabled","display","comics","CharInfo","charId","CharSearchForm","getCharacterByName","errorMessage","results","to","initialValues","charName","validationSchema","Yup","required","onSubmit","htmlFor","type","placeholder","component","MainPage","selectedChar","Helmet","content","decoration"],"mappings":"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","file":"static/js/4.db4339ca.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from \"react\";\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/setContent\";\n\nimport \"./randomChar.scss\";\nimport mjolnir from \"../../resources/img/mjolnir.png\";\n\nconst RandomChar = () => {\n  const [char, setChar] = useState(null);\n\n  const { getCharacter, clearError, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    const timerId = setInterval(updateChar, 60000);\n\n    return () => {\n      clearInterval(timerId);\n    };\n  }, []);\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = () => {\n    clearError();\n\n    const id = Math.floor(Math.random() * (1011400 - 1011000)) + 1011000;\n\n    getCharacter(id)\n      .then(onCharLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  return (\n    <div className=\"randomchar\">\n      {setContent(process, View, char)}\n      <div className=\"randomchar__static\">\n        <p className=\"randomchar__title\">\n          Random character for today!\n          <br />\n          Do you want to get to know him better?\n        </p>\n        <p className=\"randomchar__title\">Or choose another one</p>\n        <button onClick={updateChar} className=\"button button__main\">\n          <div className=\"inner\">try it</div>\n        </button>\n        <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n      </div>\n    </div>\n  );\n};\n\nconst View = ({ data }) => {\n  const { name, description, thumbnail, homepage, wiki } = data;\n  let imgStyle = { objectFit: \"cover\" };\n  if (thumbnail.includes(\"image_not_available\")) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <div className=\"randomchar__block\">\n      <img\n        src={thumbnail}\n        alt=\"Random character\"\n        className=\"randomchar__img\"\n        style={imgStyle}\n      />\n      <div className=\"randomchar__info\">\n        <p className=\"randomchar__name\">{name}</p>\n        <p className=\"randomchar__descr\">{description}</p>\n        <div className=\"randomchar__btns\">\n          <a href={homepage} className=\"button button__main\">\n            <div className=\"inner\">homepage</div>\n          </a>\n          <a href={wiki} className=\"button button__secondary\">\n            <div className=\"inner\">Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RandomChar;\n","import { useState, useEffect, useRef, useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport useMarvelService from \"../../services/MarvelService\";\n\nimport \"./charList.scss\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Spinner />;\n    case \"loading\":\n      return newItemLoading ? <Component /> : <Spinner />;\n    case \"confirmed\":\n      return <Component />;\n    case \"error\":\n      return <ErrorMessage />;\n    default:\n      throw new Error(\"Unexpected process state\");\n  }\n};\n\nconst CharList = (props) => {\n  const [charList, setCharList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(210);\n  const [charEnded, setCharEnded] = useState(false);\n\n  const { loading, error, getAllCharacters, process, setProcess } =\n    useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n\n    getAllCharacters(offset)\n      .then(onCharListLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onCharListLoaded = (newCharList) => {\n    let ended = false;\n    if (newCharList.length < 9) {\n      ended = true;\n    }\n\n    setCharList((charList) => [...charList, ...newCharList]);\n    setNewItemLoading(false);\n    setOffset((offset) => offset + 9);\n    setCharEnded(ended);\n  };\n\n  const itemRefs = useRef([]);\n\n  const focusOnItem = (id) => {\n    itemRefs.current.forEach((item) =>\n      item.classList.remove(\"char__item_selected\")\n    );\n    itemRefs.current[id].classList.add(\"char__item_selected\");\n    itemRefs.current[id].focus();\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      let imgStyle = { objectFit: \"cover\" };\n      if (\n        item.thumbnail ===\n        \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n      ) {\n        imgStyle = { objectFit: \"unset\" };\n      }\n\n      return (\n        <li\n          className=\"char__item\"\n          tabIndex={0}\n          ref={(el) => (itemRefs.current[i] = el)}\n          key={item.id}\n          onClick={() => {\n            props.onCharSelected(item.id);\n            focusOnItem(i);\n          }}\n          onKeyPress={(e) => {\n            if (e.key === \" \" || e.key === \"Enter\") {\n              props.onCharSelected(item.id);\n              focusOnItem(i);\n            }\n          }}\n        >\n          <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n          <div className=\"char__name\">{item.name}</div>\n        </li>\n      );\n    });\n\n    return <ul className=\"char__grid\">{items}</ul>;\n  }\n\n  const elements = useMemo(() => {\n    return setContent(process, () => renderItems(charList), newItemLoading);\n  }, [process]);\n\n  return (\n    <div className=\"char__list\">\n      {elements}\n      <button\n        className=\"button button__main button__long\"\n        disabled={newItemLoading}\n        style={{ display: charEnded ? \"none\" : \"block\" }}\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired,\n};\n\nexport default CharList;\n","import { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport setContent from \"../../utils/setContent\";\n\nimport \"./charInfo.scss\";\n\nconst CharInfo = (props) => {\n  const [char, setChar] = useState(null);\n\n  const { getCharacter, clearError, process, setProcess } = useMarvelService();\n\n  useEffect(() => {\n    updateChar();\n    // eslint-disable-next-line\n  }, [props.charId]);\n\n  const updateChar = () => {\n    const { charId } = props;\n    if (!charId) {\n      return;\n    }\n\n    clearError();\n    getCharacter(charId)\n      .then(onCharLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  return <div className=\"char__info\">{setContent(process, View, char)}</div>;\n};\n\nconst View = ({ data }) => {\n  const { name, description, thumbnail, homepage, wiki, comics } = data;\n\n  let imgStyle = { objectFit: \"cover\" };\n  if (\n    thumbnail ===\n    \"http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg\"\n  ) {\n    imgStyle = { objectFit: \"contain\" };\n  }\n\n  return (\n    <>\n      <div className=\"char__basics\">\n        <img src={thumbnail} alt={name} style={imgStyle} />\n        <div>\n          <div className=\"char__info-name\">{name}</div>\n          <div className=\"char__btns\">\n            <a href={homepage} className=\"button button__main\">\n              <div className=\"inner\">homepage</div>\n            </a>\n            <a href={wiki} className=\"button button__secondary\">\n              <div className=\"inner\">Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className=\"char__descr\">{description}</div>\n      <div className=\"char__comics\">Comics:</div>\n      <ul className=\"char__comics-list\">\n        {comics.length > 0 ? null : \"There is no comics with this character\"}\n        {comics.map((item, i) => {\n          if (i > 9) return;\n          return (\n            <li key={i} className=\"char__comics-item\">\n              {item.name}\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nCharInfo.propTypes = {\n  charId: PropTypes.number,\n};\n\nexport default CharInfo;\n","import { useState } from \"react\";\nimport {\n  Formik,\n  Form,\n  Field,\n  ErrorMessage as FormikErrorMessage,\n} from \"formik\";\nimport * as Yup from \"yup\";\nimport { Link } from \"react-router-dom\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./charSearchForm.scss\";\n\nconst CharSearchForm = () => {\n  const [char, setChar] = useState(null);\n  const { getCharacterByName, clearError, process, setProcess } =\n    useMarvelService();\n\n  const onCharLoaded = (char) => {\n    setChar(char);\n  };\n\n  const updateChar = (name) => {\n    clearError();\n\n    getCharacterByName(name)\n      .then(onCharLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const errorMessage =\n    process === \"error\" ? (\n      <div className=\"char__search-critical-error\">\n        <ErrorMessage />\n      </div>\n    ) : null;\n  const results = !char ? null : char.length > 0 ? (\n    <div className=\"char__search-wrapper\">\n      <div className=\"char__search-success\">\n        There is! Visit {char[0].name} page?\n      </div>\n      <Link\n        to={`/characters/${char[0].id}`}\n        className=\"button button__secondary\"\n      >\n        <div className=\"inner\">To page</div>\n      </Link>\n    </div>\n  ) : (\n    <div className=\"char__search-error\">\n      The character was not found. Check the name and try again\n    </div>\n  );\n\n  return (\n    <div className=\"char__search-form\">\n      <Formik\n        initialValues={{\n          charName: \"\",\n        }}\n        validationSchema={Yup.object({\n          charName: Yup.string().required(\"This field is required\"),\n        })}\n        onSubmit={({ charName }) => {\n          updateChar(charName);\n        }}\n      >\n        <Form>\n          <label className=\"char__search-label\" htmlFor=\"charName\">\n            Or find a character by name:\n          </label>\n          <div className=\"char__search-wrapper\">\n            <Field\n              id=\"charName\"\n              name=\"charName\"\n              type=\"text\"\n              placeholder=\"Enter name\"\n            />\n            <button\n              type=\"submit\"\n              className=\"button button__main\"\n              disabled={process === \"loading\"}\n            >\n              <div className=\"inner\">find</div>\n            </button>\n          </div>\n          <FormikErrorMessage\n            component=\"div\"\n            className=\"char__search-error\"\n            name=\"charName\"\n          />\n        </Form>\n      </Formik>\n      {results}\n      {errorMessage}\n    </div>\n  );\n};\n\nexport default CharSearchForm;\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\n\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport CharSearchForm from \"../charSearchForm/CharSearchForm\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nimport decoration from \"../../resources/img/vision.png\";\n\nconst MainPage = () => {\n  const [selectedChar, setChar] = useState(null);\n\n  const onCharSelected = (id) => {\n    setChar(id);\n  };\n\n  return (\n    <>\n      <Helmet>\n        <meta name=\"description\" content=\"Marvel information portal\" />\n        <title>Marvel information portal</title>\n      </Helmet>\n      <ErrorBoundary>\n        <RandomChar />\n      </ErrorBoundary>\n      <div className=\"char__content\">\n        <ErrorBoundary>\n          <CharList onCharSelected={onCharSelected} />\n        </ErrorBoundary>\n        <div>\n          <ErrorBoundary>\n            <CharInfo charId={selectedChar} />\n          </ErrorBoundary>\n          <ErrorBoundary>\n            <CharSearchForm />\n          </ErrorBoundary>\n        </div>\n      </div>\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n    </>\n  );\n};\n\nexport default MainPage;\n"],"sourceRoot":""}