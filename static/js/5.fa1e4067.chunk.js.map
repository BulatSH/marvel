{"version":3,"sources":["components/errorBoundary/ErrorBoundary.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"names":["ErrorBoundary","state","error","errorInfo","console","log","this","setState","props","children","Component","setContent","process","newItemLoading","Spinner","ErrorMessage","Error","ComicsList","useState","comicsList","setComicsList","setNewItemLoading","offset","setOffset","comicsEnded","setComicsEnded","useMarvelService","getAllComics","loading","setProcess","useEffect","onRequest","initial","then","onComicsListLoaded","newComicsList","ended","length","className","arr","items","map","item","i","to","id","src","thumbnail","alt","title","price","renderItems","disabled","style","display","onClick","ComicsPage","Helmet","name","content","AppBanner"],"mappings":"2JAGMA,E,4MACJC,MAAQ,CACNC,OAAO,G,uDAGT,SAAkBA,EAAOC,GACvBC,QAAQC,IAAIH,EAAOC,GACnBG,KAAKC,SAAS,CACZL,OAAO,M,oBAIX,WACE,OAAII,KAAKL,MAAMC,MACN,cAAC,IAAD,IAGFI,KAAKE,MAAMC,a,GAjBMC,aAqBbV,O,4ICfTW,EAAa,SAACC,EAASF,EAAWG,GACtC,OAAQD,GACN,IAAK,UACH,OAAO,cAACE,EAAA,EAAD,IACT,IAAK,UACH,OAAOD,EAAiB,cAACH,EAAD,IAAgB,cAACI,EAAA,EAAD,IAC1C,IAAK,YACH,OAAO,cAACJ,EAAD,IACT,IAAK,QACH,OAAO,cAACK,EAAA,EAAD,IACT,QACE,MAAM,IAAIC,MAAM,8BAsEPC,EAlEI,WACjB,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4CF,oBAAS,GAArD,mBAAOL,EAAP,KAAuBQ,EAAvB,KACA,EAA4BH,mBAAS,GAArC,mBAAOI,EAAP,KAAeC,EAAf,KACA,EAAsCL,oBAAS,GAA/C,mBAAOM,EAAP,KAAoBC,EAApB,KAEA,EACEC,cADsBC,GAAxB,EAAQC,QAAR,EAAiB1B,MAAjB,EAAwByB,cAAcf,EAAtC,EAAsCA,QAASiB,EAA/C,EAA+CA,WAG/CC,qBAAU,WACRC,EAAUT,GAAQ,KACjB,IAEH,IAAMS,EAAY,SAACT,EAAQU,GACfX,GAAVW,GACAL,EAAaL,GACVW,KAAKC,GACLD,MAAK,kBAAMJ,EAAW,iBAGrBK,EAAqB,SAACC,GAC1B,IAAIC,GAAQ,EACRD,EAAcE,OAAS,IACzBD,GAAQ,GAEVhB,EAAc,GAAD,mBAAKD,GAAL,YAAoBgB,KACjCd,GAAkB,GAClBE,EAAUD,EAAS,GACnBG,EAAeW,IAuBjB,OACE,sBAAKE,UAAU,eAAf,UACG3B,EAAWC,GAAS,kBAtBzB,SAAqB2B,GACnB,IAAMC,EAAQD,EAAIE,KAAI,SAACC,EAAMC,GAC3B,OACE,oBAAIL,UAAU,eAAd,SACE,eAAC,IAAD,CAAMM,GAAE,kBAAaF,EAAKG,IAA1B,UACE,qBACEC,IAAKJ,EAAKK,UACVC,IAAKN,EAAKO,MACVX,UAAU,qBAEZ,qBAAKA,UAAU,oBAAf,SAAoCI,EAAKO,QACzC,qBAAKX,UAAU,qBAAf,SAAqCI,EAAKQ,YARZP,MActC,OAAO,oBAAIL,UAAU,eAAd,SAA8BE,IAKRW,CAAYhC,KAAaN,GACpD,wBACEuC,SAAUvC,EACVwC,MAAO,CAAEC,QAAS9B,EAAc,OAAS,SACzCc,UAAU,mCACViB,QAAS,kBAAMxB,EAAUT,IAJ3B,SAME,qBAAKgB,UAAU,QAAf,6B,gBC/DOkB,UAfI,WACjB,OACE,qCACE,eAACC,EAAA,EAAD,WACE,sBAAMC,KAAK,cAAcC,QAAQ,iCACjC,mDAEF,eAAC3D,EAAA,EAAD,WACE,cAAC4D,EAAA,EAAD,IACA,cAAC,EAAD","file":"static/js/5.fa1e4067.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: false,\n  };\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo);\n    this.setState({\n      error: true,\n    });\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage />;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport useMarvelService from \"../../services/MarvelService\";\nimport Spinner from \"../spinner/Spinner\";\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\n\nimport \"./comicsList.scss\";\n\nconst setContent = (process, Component, newItemLoading) => {\n  switch (process) {\n    case \"waiting\":\n      return <Spinner />;\n    case \"loading\":\n      return newItemLoading ? <Component /> : <Spinner />;\n    case \"confirmed\":\n      return <Component />;\n    case \"error\":\n      return <ErrorMessage />;\n    default:\n      throw new Error(\"Unexpected process state\");\n  }\n};\n\nconst ComicsList = () => {\n  const [comicsList, setComicsList] = useState([]);\n  const [newItemLoading, setNewItemLoading] = useState(false);\n  const [offset, setOffset] = useState(0);\n  const [comicsEnded, setComicsEnded] = useState(false);\n\n  const { loading, error, getAllComics, process, setProcess } =\n    useMarvelService();\n\n  useEffect(() => {\n    onRequest(offset, true);\n  }, []);\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoading(false) : setNewItemLoading(true);\n    getAllComics(offset)\n      .then(onComicsListLoaded)\n      .then(() => setProcess(\"confirmed\"));\n  };\n\n  const onComicsListLoaded = (newComicsList) => {\n    let ended = false;\n    if (newComicsList.length < 8) {\n      ended = true;\n    }\n    setComicsList([...comicsList, ...newComicsList]);\n    setNewItemLoading(false);\n    setOffset(offset + 8);\n    setComicsEnded(ended);\n  };\n\n  function renderItems(arr) {\n    const items = arr.map((item, i) => {\n      return (\n        <li className=\"comics__item\" key={i}>\n          <Link to={`/comics/${item.id}`}>\n            <img\n              src={item.thumbnail}\n              alt={item.title}\n              className=\"comics__item-img\"\n            />\n            <div className=\"comics__item-name\">{item.title}</div>\n            <div className=\"comics__item-price\">{item.price}</div>\n          </Link>\n        </li>\n      );\n    });\n\n    return <ul className=\"comics__grid\">{items}</ul>;\n  }\n\n  return (\n    <div className=\"comics__list\">\n      {setContent(process, () => renderItems(comicsList), newItemLoading)}\n      <button\n        disabled={newItemLoading}\n        style={{ display: comicsEnded ? \"none\" : \"block\" }}\n        className=\"button button__main button__long\"\n        onClick={() => onRequest(offset)}\n      >\n        <div className=\"inner\">load more</div>\n      </button>\n    </div>\n  );\n};\n\nexport default ComicsList;\n","import { Helmet } from \"react-helmet\";\n\nimport ComicsList from \"../comicsList/ComicsList\";\nimport AppBanner from \"../appBanner/AppBanner\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nconst ComicsPage = () => {\n  return (\n    <>\n      <Helmet>\n        <meta name=\"description\" content=\"Page with list of our comics\" />\n        <title>Comics page</title>\n      </Helmet>\n      <ErrorBoundary>\n        <AppBanner />\n        <ComicsList />\n      </ErrorBoundary>\n    </>\n  );\n};\n\nexport default ComicsPage;\n"],"sourceRoot":""}